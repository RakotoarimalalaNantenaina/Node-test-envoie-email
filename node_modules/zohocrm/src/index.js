(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['./ApiClient', './model/Account', './model/BulkLoad', './model/BulkQuery', './model/BulkStatus', './model/Calls', './model/Campaign', './model/Contact', './model/Events', './model/Lead', './model/Notes', './model/NotesPOST', './model/Opportunity', './model/Pong', './model/Product', './model/Tasks', './model/User', './api/ZohocrmApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Account'), require('./model/BulkLoad'), require('./model/BulkQuery'), require('./model/BulkStatus'), require('./model/Calls'), require('./model/Campaign'), require('./model/Contact'), require('./model/Events'), require('./model/Lead'), require('./model/Notes'), require('./model/NotesPOST'), require('./model/Opportunity'), require('./model/Pong'), require('./model/Product'), require('./model/Tasks'), require('./model/User'), require('./api/ZohocrmApi'));
  }
}(function(ApiClient, Account, BulkLoad, BulkQuery, BulkStatus, Calls, Campaign, Contact, Events, Lead, Notes, NotesPOST, Opportunity, Pong, Product, Tasks, User, ZohocrmApi) {
  'use strict';

  /**
   * Client library of zohocrm.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Zohocrm = require('./index'); // See note below*.
   * var xxxSvc = new Zohocrm.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Zohocrm.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['./index'], function(){...}) and put the application logic within the
   * callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Zohocrm.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Zohocrm.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version api-v2
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account: Account,
    /**
     * The BulkLoad model constructor.
     * @property {module:model/BulkLoad}
     */
    BulkLoad: BulkLoad,
    /**
     * The BulkQuery model constructor.
     * @property {module:model/BulkQuery}
     */
    BulkQuery: BulkQuery,
    /**
     * The BulkStatus model constructor.
     * @property {module:model/BulkStatus}
     */
    BulkStatus: BulkStatus,
    /**
     * The Calls model constructor.
     * @property {module:model/Calls}
     */
    Calls: Calls,
    /**
     * The Campaign model constructor.
     * @property {module:model/Campaign}
     */
    Campaign: Campaign,
    /**
     * The Contact model constructor.
     * @property {module:model/Contact}
     */
    Contact: Contact,
    /**
     * The Events model constructor.
     * @property {module:model/Events}
     */
    Events: Events,
    /**
     * The Lead model constructor.
     * @property {module:model/Lead}
     */
    Lead: Lead,
    /**
     * The Notes model constructor.
     * @property {module:model/Notes}
     */
    Notes: Notes,
    /**
     * The NotesPOST model constructor.
     * @property {module:model/NotesPOST}
     */
    NotesPOST: NotesPOST,
    /**
     * The Opportunity model constructor.
     * @property {module:model/Opportunity}
     */
    Opportunity: Opportunity,
    /**
     * The Pong model constructor.
     * @property {module:model/Pong}
     */
    Pong: Pong,
    /**
     * The Product model constructor.
     * @property {module:model/Product}
     */
    Product: Product,
    /**
     * The Tasks model constructor.
     * @property {module:model/Tasks}
     */
    Tasks: Tasks,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The ZohocrmApi service constructor.
     * @property {module:api/ZohocrmApi}
     */
    ZohocrmApi: ZohocrmApi
  };

  return exports;
}));
